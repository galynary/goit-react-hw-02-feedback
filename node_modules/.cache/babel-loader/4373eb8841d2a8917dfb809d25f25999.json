{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport { Statistics } from './Statistics/Statistics';\nimport { Section } from './Section/Section';\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\nimport { Notification } from './Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.countTotalFeedback = () => {\n      return Object.values(this.state).reduce((value, acc) => acc + value, 0);\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Math.round(this.state.good / this.countTotalFeedback() * 100);\n    };\n\n    this.handleClick = evt => {\n      const nameOption = evt.currentTarget.name;\n      this.setState(prevState => {\n        return {\n          [nameOption]: prevState[nameOption] + 1\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const options = Object.keys(this.state);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: options,\n          onLeaveFeedback: this.handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: this.countTotalFeedback() > 0 ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"No feedback given\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Home/Documents/GitHub/goit-react-hw-02-feedback/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Statistics","Section","FeedbackOptions","Notification","App","state","good","neutral","bad","countTotalFeedback","Object","values","reduce","value","acc","countPositiveFeedbackPercentage","Math","round","handleClick","evt","nameOption","currentTarget","name","setState","prevState","render","options","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAASC,YAAT,QAA6B,6BAA7B;;;AACA,OAAO,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCM,KADiC,GACzB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADyB;;AAAA,SAOjCC,kBAPiC,GAOZ,MAAM;AACzB,aAAOC,MAAM,CAACC,MAAP,CAAc,KAAKN,KAAnB,EAA0BO,MAA1B,CAAiC,CAACC,KAAD,EAAQC,GAAR,KAAgBA,GAAG,GAAGD,KAAvD,EAA8D,CAA9D,CAAP;AACD,KATgC;;AAAA,SAWjCE,+BAXiC,GAWC,MAAM;AACtC,aAAOC,IAAI,CAACC,KAAL,CAAY,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,KAAKG,kBAAL,EAAnB,GAAgD,GAA3D,CAAP;AACD,KAbgC;;AAAA,SAejCS,WAfiC,GAenBC,GAAG,IAAI;AACnB,YAAMC,UAAU,GAAGD,GAAG,CAACE,aAAJ,CAAkBC,IAArC;AACA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAAE,WAACJ,UAAD,GAAcI,SAAS,CAACJ,UAAD,CAAT,GAAwB;AAAxC,SAAP;AACD,OAFD;AAGD,KApBgC;AAAA;;AAsBjCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMqB,OAAO,GAAGhB,MAAM,CAACiB,IAAP,CAAY,KAAKtB,KAAjB,CAAhB;AACA,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEqB,OADX;AAEE,UAAA,eAAe,EAAE,KAAKR;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACG,KAAKT,kBAAL,KAA4B,CAA5B,gBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAE,KAAKC,kBAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKM,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAuBD;;AAhDgC","sourcesContent":["import React, { Component } from 'react';\r\nimport { Statistics } from './Statistics/Statistics';\r\nimport { Section } from './Section/Section';\r\nimport { FeedbackOptions } from './FeedbackOptions/FeedbackOptions';\r\nimport { Notification } from './Notification/Notification';\r\nexport class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((value, acc) => acc + value, 0);\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  };\r\n\r\n  handleClick = evt => {\r\n    const nameOption = evt.currentTarget.name;\r\n    this.setState(prevState => {\r\n      return { [nameOption]: prevState[nameOption] + 1 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const options = Object.keys(this.state);\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={this.handleClick}\r\n          />\r\n        </Section>\r\n        <Section title=\"Statistics\">\r\n          {this.countTotalFeedback() > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}